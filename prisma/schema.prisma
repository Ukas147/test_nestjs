// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime?
  deletedAt DateTime?
}

model Product {
  id        Int      @id @default(autoincrement())
  name      String
  priceCents  Int?  @default(0)
  quantity  Int?  @default(0)
  isActive  Boolean @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime?
  deletedAt DateTime?
}

model Car {
  id        Int     @id @default(autoincrement())
  name      String
  mark      String
  age       Int?    @default(0000)
  color     String? @default("Black")
  licensePlate  String @unique
  createdAt DateTime @default(now())
  updatedAt DateTime?
  deletedAt DateTime?
}

model Payment {
  id        Int     @id @default(autoincrement())
  method    String
  value     Int
  status    String
  createdAt DateTime  @default(now())
  updatedAt DateTime?
  deletedAt DateTime?
}

model Vehicle {
  id                Int      @id @default(autoincrement())
  brand             String
  model             String
  year              Int
  color             String
  licensePlate      String
  vin               String
  mileage           Float
  fuelType          String
  transmission      String
  enginePower       Float
  numberOfDoors     Int
  weightKg          Float
  heightMeters      Float
  widthMeters       Float
  lengthMeters      Float
  isElectric        Boolean
  registrationDate  DateTime
  lastServiceDate   DateTime?
  isAvailable       Boolean   @default(true)
  description       String?
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
  deletedAt         DateTime?
}
